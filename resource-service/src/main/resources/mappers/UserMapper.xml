<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jnshu.resourceservice.dao.UserMapper">

    <resultMap id="BaseResultMap" type="com.jnshu.resourceservice.entity.User" >
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="salt" property="salt"/>
        <result column="phone_num" property="phoneNum"/>
        <result column="head_image" property="headImage"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_update" property="gmtUpdate"/>
        <result column="create_by" property="createBy"/>
        <result column="update_by" property="updateBy"/>
        <result column="status" property="status"/>
        <collection property="roleList" ofType="com.jnshu.resourceservice.entity.Role" javaType="list" >
            <result column="r_id" property="id"/>
            <result column="role_name" property="roleName"/>
            <result column="r_gmt_create" property="gmtCreate"/>
            <result column="r_gmt_update" property="gmtUpdate"/>
            <result column="r_create_by" property="createBy"/>
            <result column="r_update_by" property="updateBy"/>
            <!--嵌套权限信息-->
            <collection property="permissionsList" ofType="com.jnshu.resourceservice.entity.Permission" javaType="list">
                <result column="p_id" property="id"/>
                <result column="permission_name"  property="permissionName"/>
                <result column="p_gmt_create" property="gmtCreate"/>
                <result column="p_gmt_update" property="gmtUpdate"/>
                <result column="p_create_by" property="createBy"/>
                <result column="p_update_by" property="updateBy"/>
            </collection>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
    id, name, password, salt, phone_num, head_image, gmt_create, gmt_update, create_by, 
    update_by, status
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.jnshu.resourceservice.entity.User">
    insert into user (id, name, password, 
      salt, phone_num, head_image, 
      gmt_create, gmt_update, create_by, 
      update_by, status)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{phoneNum,jdbcType=VARCHAR}, #{headImage,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=BIGINT}, #{gmtUpdate,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>


    <insert id="insertSelective" parameterType="com.jnshu.resourceservice.entity.User" >
--         此种写法，keyProperty：将查询到主键值设置到parameterType指定的对象的哪个属性
--         order：SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序
--         resultType：指定SELECT LAST_INSERT_ID()的结果类型
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="phoneNum != null">
                phone_num,
            </if>
            <if test="headImage != null">
                head_image,
            </if>
            <if test="gmtCreate != null">
                gmt_create,
            </if>
            <if test="gmtUpdate != null">
                gmt_update,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null">
                #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="headImage != null">
                #{headImage,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                #{gmtUpdate,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.jnshu.resourceservice.entity.User">
        update user
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="phoneNum != null">
                phone_num = #{phoneNum,jdbcType=VARCHAR},
            </if>
            <if test="headImage != null">
                head_image = #{headImage,jdbcType=VARCHAR},
            </if>
            <if test="gmtCreate != null">
                gmt_create = #{gmtCreate,jdbcType=BIGINT},
            </if>
            <if test="gmtUpdate != null">
                gmt_update = #{gmtUpdate,jdbcType=BIGINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jnshu.resourceservice.entity.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      head_image = #{headImage,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_update = #{gmtUpdate,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectUserDetailById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
       u.id,
        u.`name`,
        u.`password`,
        u.salt,
        u.phone_num,
        u.head_image,
        u.gmt_create,
        u.gmt_update,
        u.create_by,
        u.update_by,
        r.id r_id,
        r.role_name,
        r.`status`,
        r.gmt_create r_gmt_create,
        r.gmt_update r_gmt_update,
        r.create_by r_create_by,
        r.update_by r_update_by,
        p.id p_id,
        p.permission_name,
        p.gmt_create p_gmt_create,
        p.gmt_update p_gmt_update,
        p.create_by p_create_by,
        p.update_by p_update_by
    FROM
        `user` AS u
    LEFT JOIN user_role AS ur ON u.id = ur.user_id
    LEFT JOIN role AS r ON ur.role_id = r.id
    LEFT JOIN role_permission AS rp ON r.id = rp.role_id
    LEFT JOIN permission AS p ON rp.node_id = p.id
    WHERE
        u.id=#{id}
  </select>

    <select id="findByUsername" parameterType="String" resultMap="BaseResultMap">
   SELECT
        u.id,
        u.`name`,
        u.`password`,
        u.salt,
        u.phone_num,
        u.head_image,
        u.gmt_create,
        u.gmt_update,
        u.create_by,
        u.update_by,
        r.id r_id,
        r.role_name,
        r.`status`,
        r.gmt_create r_gmt_create,
        r.gmt_update r_gmt_update,
        r.create_by r_create_by,
        r.update_by r_update_by,
        p.id p_id,
        p.permission_name,
        p.gmt_create p_gmt_create,
        p.gmt_update p_gmt_update,
        p.create_by p_create_by,
        p.update_by p_update_by
    FROM
        `user` AS u
    LEFT JOIN user_role AS ur ON u.id = ur.user_id
    LEFT JOIN role AS r ON ur.role_id = r.id
    LEFT JOIN role_permission AS rp ON r.id = rp.role_id
    LEFT JOIN permission AS p ON rp.node_id = p.id
    WHERE
         u.`name`=#{username}
  </select>


</mapper>