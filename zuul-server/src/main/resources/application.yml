eureka:
  client:
    serviceUrl:
      defaultZone: http://120.79.82.72:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    preferIpAddress: true
    hostname: ${spring.cloud.client.ip-address}
#    ip-address: 113.81.148.84
    ip-address: localhost
    instance-id: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
server:
  port: 7888
spring:
  application:
    name: zuul-service
  redis:
    host: 127.0.0.1
    port: 6379
    timeout: 0
    password:
zuul:
  semaphore:
    max-semaphores: 500 # 并发处理数，值越大越好，但到到达一个临界点之后，就不会提高响应速度了
  routes:
    api-a:
      path: /a/**
      serviceId: sources-service
    api-b:
      path: /auth/**
      serviceId: uaa-service
  host:
    connect-timeout-millis: 30000  # 连接时间semaphores
    socket-timeout-millis: 30000 # socket超时时间，如果使用service-id方式是不用配置的
    max-total-connections: 200  # 最大连接数，值越大越好，但到到达一个临界点之后，就不会提高响应速度了
    max-per-route-connections: 5  # 每个router最大连接数，降低请求时间，越小越好，但达到一定层级就没用了
    time-unit: MILLISECONDS
    time-to-live: 10000

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000  # Hystrix超时时间
ribbon:
  ReadTimeout: 20000 # 处理时间
  ConnectTimeout: 20000 # 连接时间
  MaxAutoRetries: 0 #最大自动重试次数
  MaxAutoRetriesNextServer: 1 # 换实例重试次数
  MaxTotalHttpConnections: 2000 # 最大http连接数，越大越好，但到到达一个临界点之后，就不会提高响应速度了
  MaxConnectionsPerHost: 1000 # 每个host连接数